group = 'com.coinselection'
version = '0.0.1'
buildscript {
    ext.kotlin_version = '1.3.10'
    ext.spring_boot_version = '2.0.6.RELEASE'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    enabled = true
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
//  kotlin

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')


//  testing


    testCompile 'io.kotlintest:kotlintest-runner-junit5:3.1.10'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.1'

    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10'
}

processResources {
    expand(project.properties)
}

sourceCompatibility = 1.10
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
test {
    useJUnitPlatform()
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}